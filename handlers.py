from bs4 import BeautifulSoup
import requests
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from telegram import ParseMode
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from telegram.ext import ConversationHandler
from utility import *
from glob import glob
from random import choice
from parser_foto import return_foto
from emoji import emojize
from utility import SMILE
from mongodb import mdb, search_or_save_user, save_user_anketa, save_picture_name, save_file_id, save_like_dislike


def inline_button_pressed(bot, update):
    # print(bot.callback_query)
    query = bot.callback_query  # –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    data = int(query.data)  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ (1 –∏–ª–∏ -1)
    save_like_dislike(mdb, query, data)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–¥
    update.bot.edit_message_caption(
        caption='–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä!',
        chat_id=query.message.chat.id,
        message_id=query.message.message_id)  # —É–±–µ—Ä–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–≤–µ–¥–µ–º —Ç–µ–∫—Å—Ç

# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
def send_meme(bot, update):
    return_foto() #–ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ –∏ –ª–æ–∂–∏–º –≤ –∫–∞—Ç–∞–ª–æ–≥ image
    lists = glob('image/*')  # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ä—Ç–∏–Ω–æ–∫
    picture = choice(lists)  # –±–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É
    print(picture)
    image = save_picture_name(mdb, picture)  # –ø–æ–ª—É—á–∞–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤–∞—Ä—å
    inl_keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton(f"üëç {image['like']}", callback_data=1),
        InlineKeyboardButton(f"üëé {image['dislike']}", callback_data=-1)
        #InlineKeyboardButton("üëç", callback_data=1),
        #InlineKeyboardButton("üëé", callback_data=-1)
    ]])
    msg = update.bot.send_photo(chat_id=bot.message.chat.id,
                          photo=open(picture,'rb'),
                          reply_markup=inl_keyboard) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    #print(msg)
    save_file_id(mdb, picture, msg)


# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
def get_contact(bot, update):
    print(f'"{bot.message.chat.first_name}" –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã {bot.message.contact}')
    bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!'.format(bot.message.chat.first_name))

# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≥–µ–æ–¥–∞–Ω–Ω—ã–µ
def get_location(bot, update):
    print(f'"{bot.message.chat.first_name}" –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã {bot.message.location}')
    bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ!'.format(bot.message.chat.first_name))

# —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏—Ç –∞–Ω–µ–∫–¥–æ—Ç—ã
def get_anecdote(bot, update):
    print(f'"{bot.message.chat.first_name}" –ø—Ä–æ—á–∏—Ç–∞–ª –∞–Ω–µ–∫–¥–æ—Ç')
    receive = requests.get('http://anekdotme.ru/random')  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    page = BeautifulSoup(receive.text, "html.parser")  # –ø–æ–¥–∫–ª—é—á–∞–µ–º html –ø–∞—Ä—Å–µ—Ä, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    find = page.select('.anekdot_text')  # –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã html –ø–æ–ª—É—á–∞–µ–º class="anekdot_text"
    for text in find:
        page = (text.getText().strip())  # –∏–∑ class="anekdot_text" –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º
    bot.message.reply_text(page)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç, –ø–æ—Å–ª–µ–¥–Ω–∏–π


def anketa_start(bot, update):
     user = search_or_save_user(mdb, bot.effective_user, bot.message)  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
     if 'anketa' in user:
         text = """–í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
         <b>–ò–º—è:</b> {name}
         <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
         <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
         <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}

 –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã!
         –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?
         """.format(**user['anketa'])
         bot.message.reply_text(
             text, parse_mode=ParseMode.HTML, reply_markup=ReplyKeyboardRemove())  # –≤–æ–ø—Ä–æ—Å –∏ —É–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
         return "user_name"
     else:
         bot.message.reply_text(
             '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?', reply_markup=ReplyKeyboardRemove())  # –≤–æ–ø—Ä–æ—Å –∏ —É–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
         return "user_name"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

#    bot.message.reply_text('–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?', reply_markup=ReplyKeyboardRemove())  # –≤–æ–ø—Ä–æ—Å –∏ —É–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#    return "user_name"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def anketa_get_name(bot, update):
    update.user_data['name'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    bot.message.reply_text("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")  # –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å
    return "user_age"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def anketa_get_age(bot, update):
    update.user_data['age'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    reply_keyboard = [["1", "2", "3", "4", "5"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.message.reply_text(
        "–û—Ü–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ç—å—é –æ—Ç 1 –¥–æ 5",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, resize_keyboard=True, one_time_keyboard=True))  # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    return "evaluation"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def anketa_get_evaluation(bot, update):
    update.user_data['evaluation'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    reply_keyboard = [["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.",
                           reply_markup=ReplyKeyboardMarkup(
                               reply_keyboard, resize_keyboard=True, one_time_keyboard=True))  # –∫–ª–∞–≤–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    return "comment"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def anketa_comment(bot, update):
    update.user_data['comment'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    user = search_or_save_user(mdb, bot.effective_user, bot.message)  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    #print('–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', anketa)
    #anketa = save_user_anketa(mdb, user, update.user_data)  # –ø–µ—Ä–µ–¥–∞–µ–º –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç—ã
    save_user_anketa(mdb, user, update.user_data)
    anketa = search_or_save_user(mdb, bot.effective_user, bot.message)
    print('–í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', anketa)
    # –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML
    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞: 
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
    <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
    """.format(**update.user_data)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!", reply_markup=get_keyboard())  # —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä. –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞

#—Ñ—É–Ω–∫—Ü–∏—è, –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
def anketa_exit_comment(bot, update):
    update.user_data['comment'] = None
    user = search_or_save_user(mdb, bot.effective_user, bot.message)  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    save_user_anketa(mdb, user, update.user_data)  # –ø–µ—Ä–µ–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç—ã
    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}""".format(**update.user_data)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ!", reply_markup=get_keyboard())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞


def dontknow(bot, update):
    bot.message.reply_text("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!")