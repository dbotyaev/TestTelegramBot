from ai_dialogflow import reply_ai_dialogflow
#from bs4 import BeautifulSoup
from handlers import *
import logging
#from telegram import ReplyKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler
from telegram.ext import ConversationHandler
from telegram.ext import Filters
from telegram.ext import MessageHandler
from telegram.ext import Updater
from settings import TG_TOKEN, TG_API_URL
from utility import *
#from utility import get_keyboard
#import requests
from random import choice


logging.basicConfig(format='%(asctime)s - %(levelname)s - %(message)s',
                    level=logging.INFO,
                    filename='bot.log'
                    )

def sms(bot, update):
    """
    —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (—Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—à–ª–æ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Telegram, –∏
    —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º—ã –∏–º —É–ø—Ä–∞–≤–ª—è–µ–º)
    —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–∞–Ω–¥—ã /start
    –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –µ–µ –≤—ã–∑–æ–≤–µ
    :param bot:
    :param update:
    :return:
    """
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    print(user)

    # print(bot.effective_user)
    # print()
    # print(bot.message)
    # print()
    print(f'"{bot.message.chat.first_name}" –æ—Ç–ø—Ä–∞–≤–∏–ª(–∞) –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å?') #–≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
    #my_keyboard = ReplyKeyboardMarkup([['–ê–Ω–µ–∫–¥–æ—Ç']], resize_keyboard=True)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    smile = emojize(choice(SMILE), use_aliases=True)  # –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∏ emoji
    bot.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {bot.message.chat.first_name}! \n–Ø –±–æ—Ç —Å –ò–ò –æ—Ç DialogFlow –∏ –µ—â–µ –ø–æ–∫–∞ –ø–ª–æ—Ö–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—é, –Ω–æ –±—ã—Å—Ç—Ä–æ —É—á—É—Å—å{smile}',
                           reply_markup = get_keyboard()) #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    #print(bot.message)

def parrot(bot, update):
    print(f'"{bot.message.chat.first_name}" –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ "{bot.message.text}"') #–≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    #bot.message.reply_text(bot.message.text) #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±—Ä–∞—Ç–Ω–æ –µ–≥–æ —Ç–µ–∫—Å—Ç
    smile = emojize(choice(SMILE), use_aliases=True)  # –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∏ emoji
    bot.message.reply_text(reply_ai_dialogflow(bot.message.text)+smile)

def main():
    my_bot = Updater(TG_TOKEN, TG_API_URL, use_context=True)
    logging.info('Start bot')
    my_bot.dispatcher.add_handler(CommandHandler('start', sms))
    # dispatcher –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Telegram –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # add_handler –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ CommandHandler.
    # CommandHandler –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π –Ω–∞ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—É—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    # –∫–æ–≥–¥–∞ –Ω–∞–∂–º—É—Ç –∫–æ–º–∞–Ω–¥—É /start, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –≤—ã–∑–æ–≤—É —Ñ—É–Ω–∫—Ü–∏–∏ sms()
    #my_bot.dispatcher.add_handler(MessageHandler(Filters.regex('–ù–∞—á–∞—Ç—å'), sms)) #–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
    my_bot.dispatcher.add_handler(MessageHandler(Filters.regex('–ö–æ—Ç–∏–∫–∏ üèû'), send_meme))
    my_bot.dispatcher.add_handler(MessageHandler(Filters.regex('–ê–Ω–µ–∫–¥–æ—Ç'), get_anecdote)) #–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
    #my_bot.dispatcher.add_handler(MessageHandler(Filters.regex('–ü–æ–æ–±—â–∞—Ç—å—Å—è —Å –ò–ò'),
    my_bot.dispatcher.add_handler(MessageHandler(Filters.contact, get_contact))  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    my_bot.dispatcher.add_handler(MessageHandler(Filters.location, get_location))  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏
    my_bot.dispatcher.add_handler(CallbackQueryHandler(inline_button_pressed))
    my_bot.dispatcher.add_handler(
        ConversationHandler(entry_points=[MessageHandler(Filters.regex('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'), anketa_start)],
                                                      states={
                                                          "user_name": [MessageHandler(Filters.text, anketa_get_name)],
                                                          "user_age": [MessageHandler(Filters.text, anketa_get_age)],
                                                          "evaluation": [MessageHandler(Filters.regex('1|2|3|4|5'),
                                                                                        anketa_get_evaluation)],
                                                          "comment": [MessageHandler(Filters.regex('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'),
                                                                                     anketa_exit_comment),
                                                                      MessageHandler(Filters.text, anketa_comment)]
                                                      },
                                                      fallbacks=[MessageHandler(
                                Filters.text | Filters.video | Filters.photo | Filters.document, dontknow)]))
    # ConversationHandler ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ç—Ä–æ–∏—Ç—å (–æ–ø–∏—Å—ã–≤–∞—Ç—å) –¥–∏–∞–ª–æ–≥–∏ —Å–æ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–æ–π.
    # –£ –∫–∞–∂–¥–æ–≥–æ ConversationHandler –µ—Å—Ç—å:
    # entry_points ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥, —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞.
    # states ‚Äî —à–∞–≥–∏ –¥–∏–∞–ª–æ–≥–∞, —É –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —ç—Ç–æ—Ç —à–∞–≥ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç.
    # fallbacks ‚Äî –≤—ã—Ö–æ–¥ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –∏–ª–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    my_bot.dispatcher.add_handler(MessageHandler(Filters.text, parrot))  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    my_bot.start_polling()
    my_bot.idle()

if __name__ == '__main__':
    main()

#main()